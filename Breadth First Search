1. Binary Tree Level Order Traversal:
          classic topic of BFS: use a queue to maintain a structure. 
          for each level, get a size of that level and poll node out, add in level list
          add each node's left and node's right into the queue for later poll out
          
2. Minimum Depth of Binary Tree:
          use BFS to search level order, when you meet a node has no left and right child, return the level
          or add their child to the queue and increment the level

3. Binary Tree Level Order Traversal II:
          level order traversal and reverse it

4. Course Schedule:
          create a graph and a degree array which represent the level in the graph
          Queue offer the node from the leaf node (degree==0)
          then check the graph to see their neighbor whether there is degree==1, add to the queue
          
5. Binary Tree Right Side View:
          level order traverse and every time add node right first, then you can make sure everytime, you
          will first poll out the rightmost node of each level.
          Add rightmost node into the list everytime you traverse a level

6. 
